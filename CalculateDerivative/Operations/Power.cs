//
//
//  Generated by StarUML(tm) C# Add-In
//
//  @ Project : Untitled
//  @ File Name : Operation.cs
//  @ Date : 2017. 06. 21.
//  @ Author : 
//
//


using System;

namespace CalculateDerivative.Operations
{
    public sealed class Power : Node
    {
        protected override int ArgumentNumber => 2;
        public Power(Node[] children) : base(children)
        {
        }

        public override MathExpression Derivative(string variable)
        {
            var derivatives = Derivatives(variable);
            return new MathExpression(new Multiply(new Node[]
            {
                new Power(new[] {Children[0], Children[1]}),
                new Add(new Node[]
                {
                    new Divide(new[]
                    {
                        new Multiply(new[]
                            {Children[1], derivatives[0]}),
                        Children[0]
                    }),
                    new Multiply(new[]
                    {
                        new Log(new[] {Children[0]}, Math.E),
                        derivatives[1]
                    })
                })
            }));
        }
    }
}
